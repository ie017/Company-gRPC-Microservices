// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/Company.proto
// </auto-generated>
#pragma warning disable 0414, 1591, 8981
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Employee_gRPC_service {
  public static partial class CompanyService
  {
    static readonly string __ServiceName = "CompanyService";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Employee_gRPC_service.setNameCompany> __Marshaller_setNameCompany = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Employee_gRPC_service.setNameCompany.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Employee_gRPC_service.returnCompany> __Marshaller_returnCompany = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Employee_gRPC_service.returnCompany.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Employee_gRPC_service.setCompanyId> __Marshaller_setCompanyId = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Employee_gRPC_service.setCompanyId.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Employee_gRPC_service.allEmployees> __Marshaller_allEmployees = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Employee_gRPC_service.allEmployees.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Employee_gRPC_service.allDepartments> __Marshaller_allDepartments = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Employee_gRPC_service.allDepartments.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Employee_gRPC_service.setCompanyIdAndDepartmentId> __Marshaller_setCompanyIdAndDepartmentId = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Employee_gRPC_service.setCompanyIdAndDepartmentId.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Employee_gRPC_service.allProjects> __Marshaller_allProjects = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Employee_gRPC_service.allProjects.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Employee_gRPC_service.setCompanyIdAndDepartment> __Marshaller_setCompanyIdAndDepartment = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Employee_gRPC_service.setCompanyIdAndDepartment.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Employee_gRPC_service.getDepartment> __Marshaller_getDepartment = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Employee_gRPC_service.getDepartment.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Employee_gRPC_service.Status> __Marshaller_Status = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Employee_gRPC_service.Status.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Employee_gRPC_service.setCompanyIdAndPerson> __Marshaller_setCompanyIdAndPerson = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Employee_gRPC_service.setCompanyIdAndPerson.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Employee_gRPC_service.getEmployee> __Marshaller_getEmployee = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Employee_gRPC_service.getEmployee.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Employee_gRPC_service.setCompanyIdAndEmployeeId> __Marshaller_setCompanyIdAndEmployeeId = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Employee_gRPC_service.setCompanyIdAndEmployeeId.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Employee_gRPC_service.setCompanyIdAndDepartmentIdAndEmployeeId> __Marshaller_setCompanyIdAndDepartmentIdAndEmployeeId = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Employee_gRPC_service.setCompanyIdAndDepartmentIdAndEmployeeId.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Employee_gRPC_service.setCompanyIdAndProjectAndDepartmentIdAndEmployees> __Marshaller_setCompanyIdAndProjectAndDepartmentIdAndEmployees = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Employee_gRPC_service.setCompanyIdAndProjectAndDepartmentIdAndEmployees.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Employee_gRPC_service.setCompanyIdAndProjectAndDepartmentId> __Marshaller_setCompanyIdAndProjectAndDepartmentId = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Employee_gRPC_service.setCompanyIdAndProjectAndDepartmentId.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Employee_gRPC_service.setNameCompany, global::Employee_gRPC_service.returnCompany> __Method_createCompany = new grpc::Method<global::Employee_gRPC_service.setNameCompany, global::Employee_gRPC_service.returnCompany>(
        grpc::MethodType.Unary,
        __ServiceName,
        "createCompany",
        __Marshaller_setNameCompany,
        __Marshaller_returnCompany);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Employee_gRPC_service.setCompanyId, global::Employee_gRPC_service.returnCompany> __Method_getCompany = new grpc::Method<global::Employee_gRPC_service.setCompanyId, global::Employee_gRPC_service.returnCompany>(
        grpc::MethodType.Unary,
        __ServiceName,
        "getCompany",
        __Marshaller_setCompanyId,
        __Marshaller_returnCompany);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Employee_gRPC_service.setCompanyId, global::Employee_gRPC_service.allEmployees> __Method_getHumanResource = new grpc::Method<global::Employee_gRPC_service.setCompanyId, global::Employee_gRPC_service.allEmployees>(
        grpc::MethodType.Unary,
        __ServiceName,
        "getHumanResource",
        __Marshaller_setCompanyId,
        __Marshaller_allEmployees);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Employee_gRPC_service.setCompanyId, global::Employee_gRPC_service.allDepartments> __Method_getAllDepartments = new grpc::Method<global::Employee_gRPC_service.setCompanyId, global::Employee_gRPC_service.allDepartments>(
        grpc::MethodType.Unary,
        __ServiceName,
        "getAllDepartments",
        __Marshaller_setCompanyId,
        __Marshaller_allDepartments);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Employee_gRPC_service.setCompanyIdAndDepartmentId, global::Employee_gRPC_service.allProjects> __Method_getAllProjectsOfDepartment = new grpc::Method<global::Employee_gRPC_service.setCompanyIdAndDepartmentId, global::Employee_gRPC_service.allProjects>(
        grpc::MethodType.Unary,
        __ServiceName,
        "getAllProjectsOfDepartment",
        __Marshaller_setCompanyIdAndDepartmentId,
        __Marshaller_allProjects);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Employee_gRPC_service.setCompanyIdAndDepartmentId, global::Employee_gRPC_service.allEmployees> __Method_getAllEmployeesOfDepartment = new grpc::Method<global::Employee_gRPC_service.setCompanyIdAndDepartmentId, global::Employee_gRPC_service.allEmployees>(
        grpc::MethodType.Unary,
        __ServiceName,
        "getAllEmployeesOfDepartment",
        __Marshaller_setCompanyIdAndDepartmentId,
        __Marshaller_allEmployees);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Employee_gRPC_service.setCompanyIdAndDepartment, global::Employee_gRPC_service.getDepartment> __Method_addDepartmentToCompany = new grpc::Method<global::Employee_gRPC_service.setCompanyIdAndDepartment, global::Employee_gRPC_service.getDepartment>(
        grpc::MethodType.Unary,
        __ServiceName,
        "addDepartmentToCompany",
        __Marshaller_setCompanyIdAndDepartment,
        __Marshaller_getDepartment);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Employee_gRPC_service.setCompanyIdAndDepartmentId, global::Employee_gRPC_service.Status> __Method_deleteDepartmentsFromCompany = new grpc::Method<global::Employee_gRPC_service.setCompanyIdAndDepartmentId, global::Employee_gRPC_service.Status>(
        grpc::MethodType.Unary,
        __ServiceName,
        "deleteDepartmentsFromCompany",
        __Marshaller_setCompanyIdAndDepartmentId,
        __Marshaller_Status);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Employee_gRPC_service.setCompanyIdAndPerson, global::Employee_gRPC_service.getEmployee> __Method_hireEmployee = new grpc::Method<global::Employee_gRPC_service.setCompanyIdAndPerson, global::Employee_gRPC_service.getEmployee>(
        grpc::MethodType.Unary,
        __ServiceName,
        "hireEmployee",
        __Marshaller_setCompanyIdAndPerson,
        __Marshaller_getEmployee);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Employee_gRPC_service.setCompanyIdAndEmployeeId, global::Employee_gRPC_service.allEmployees> __Method_addEmployeeToHumanResource = new grpc::Method<global::Employee_gRPC_service.setCompanyIdAndEmployeeId, global::Employee_gRPC_service.allEmployees>(
        grpc::MethodType.Unary,
        __ServiceName,
        "addEmployeeToHumanResource",
        __Marshaller_setCompanyIdAndEmployeeId,
        __Marshaller_allEmployees);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Employee_gRPC_service.setCompanyIdAndDepartmentIdAndEmployeeId, global::Employee_gRPC_service.getDepartment> __Method_addEmployeeToDepartment = new grpc::Method<global::Employee_gRPC_service.setCompanyIdAndDepartmentIdAndEmployeeId, global::Employee_gRPC_service.getDepartment>(
        grpc::MethodType.Unary,
        __ServiceName,
        "addEmployeeToDepartment",
        __Marshaller_setCompanyIdAndDepartmentIdAndEmployeeId,
        __Marshaller_getDepartment);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Employee_gRPC_service.setCompanyIdAndEmployeeId, global::Employee_gRPC_service.allEmployees> __Method_dismissFromHumanResource = new grpc::Method<global::Employee_gRPC_service.setCompanyIdAndEmployeeId, global::Employee_gRPC_service.allEmployees>(
        grpc::MethodType.Unary,
        __ServiceName,
        "dismissFromHumanResource",
        __Marshaller_setCompanyIdAndEmployeeId,
        __Marshaller_allEmployees);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Employee_gRPC_service.setCompanyIdAndDepartmentIdAndEmployeeId, global::Employee_gRPC_service.getDepartment> __Method_dismissFromDepartment = new grpc::Method<global::Employee_gRPC_service.setCompanyIdAndDepartmentIdAndEmployeeId, global::Employee_gRPC_service.getDepartment>(
        grpc::MethodType.Unary,
        __ServiceName,
        "dismissFromDepartment",
        __Marshaller_setCompanyIdAndDepartmentIdAndEmployeeId,
        __Marshaller_getDepartment);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Employee_gRPC_service.setCompanyIdAndEmployeeId, global::Employee_gRPC_service.Status> __Method_dismissEmployee = new grpc::Method<global::Employee_gRPC_service.setCompanyIdAndEmployeeId, global::Employee_gRPC_service.Status>(
        grpc::MethodType.Unary,
        __ServiceName,
        "dismissEmployee",
        __Marshaller_setCompanyIdAndEmployeeId,
        __Marshaller_Status);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Employee_gRPC_service.setCompanyIdAndProjectAndDepartmentIdAndEmployees, global::Employee_gRPC_service.getDepartment> __Method_startProject = new grpc::Method<global::Employee_gRPC_service.setCompanyIdAndProjectAndDepartmentIdAndEmployees, global::Employee_gRPC_service.getDepartment>(
        grpc::MethodType.Unary,
        __ServiceName,
        "startProject",
        __Marshaller_setCompanyIdAndProjectAndDepartmentIdAndEmployees,
        __Marshaller_getDepartment);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Employee_gRPC_service.setCompanyIdAndProjectAndDepartmentId, global::Employee_gRPC_service.getDepartment> __Method_sellProject = new grpc::Method<global::Employee_gRPC_service.setCompanyIdAndProjectAndDepartmentId, global::Employee_gRPC_service.getDepartment>(
        grpc::MethodType.Unary,
        __ServiceName,
        "sellProject",
        __Marshaller_setCompanyIdAndProjectAndDepartmentId,
        __Marshaller_getDepartment);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Employee_gRPC_service.setCompanyIdAndProjectAndDepartmentId, global::Employee_gRPC_service.getDepartment> __Method_finishProject = new grpc::Method<global::Employee_gRPC_service.setCompanyIdAndProjectAndDepartmentId, global::Employee_gRPC_service.getDepartment>(
        grpc::MethodType.Unary,
        __ServiceName,
        "finishProject",
        __Marshaller_setCompanyIdAndProjectAndDepartmentId,
        __Marshaller_getDepartment);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Employee_gRPC_service.CompanyReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of CompanyService</summary>
    [grpc::BindServiceMethod(typeof(CompanyService), "BindService")]
    public abstract partial class CompanyServiceBase
    {
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Employee_gRPC_service.returnCompany> createCompany(global::Employee_gRPC_service.setNameCompany request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Employee_gRPC_service.returnCompany> getCompany(global::Employee_gRPC_service.setCompanyId request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Employee_gRPC_service.allEmployees> getHumanResource(global::Employee_gRPC_service.setCompanyId request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Employee_gRPC_service.allDepartments> getAllDepartments(global::Employee_gRPC_service.setCompanyId request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Employee_gRPC_service.allProjects> getAllProjectsOfDepartment(global::Employee_gRPC_service.setCompanyIdAndDepartmentId request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Employee_gRPC_service.allEmployees> getAllEmployeesOfDepartment(global::Employee_gRPC_service.setCompanyIdAndDepartmentId request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Employee_gRPC_service.getDepartment> addDepartmentToCompany(global::Employee_gRPC_service.setCompanyIdAndDepartment request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Employee_gRPC_service.Status> deleteDepartmentsFromCompany(global::Employee_gRPC_service.setCompanyIdAndDepartmentId request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Employee_gRPC_service.getEmployee> hireEmployee(global::Employee_gRPC_service.setCompanyIdAndPerson request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Employee_gRPC_service.allEmployees> addEmployeeToHumanResource(global::Employee_gRPC_service.setCompanyIdAndEmployeeId request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Employee_gRPC_service.getDepartment> addEmployeeToDepartment(global::Employee_gRPC_service.setCompanyIdAndDepartmentIdAndEmployeeId request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Employee_gRPC_service.allEmployees> dismissFromHumanResource(global::Employee_gRPC_service.setCompanyIdAndEmployeeId request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Employee_gRPC_service.getDepartment> dismissFromDepartment(global::Employee_gRPC_service.setCompanyIdAndDepartmentIdAndEmployeeId request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Employee_gRPC_service.Status> dismissEmployee(global::Employee_gRPC_service.setCompanyIdAndEmployeeId request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Employee_gRPC_service.getDepartment> startProject(global::Employee_gRPC_service.setCompanyIdAndProjectAndDepartmentIdAndEmployees request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Employee_gRPC_service.getDepartment> sellProject(global::Employee_gRPC_service.setCompanyIdAndProjectAndDepartmentId request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Employee_gRPC_service.getDepartment> finishProject(global::Employee_gRPC_service.setCompanyIdAndProjectAndDepartmentId request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(CompanyServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_createCompany, serviceImpl.createCompany)
          .AddMethod(__Method_getCompany, serviceImpl.getCompany)
          .AddMethod(__Method_getHumanResource, serviceImpl.getHumanResource)
          .AddMethod(__Method_getAllDepartments, serviceImpl.getAllDepartments)
          .AddMethod(__Method_getAllProjectsOfDepartment, serviceImpl.getAllProjectsOfDepartment)
          .AddMethod(__Method_getAllEmployeesOfDepartment, serviceImpl.getAllEmployeesOfDepartment)
          .AddMethod(__Method_addDepartmentToCompany, serviceImpl.addDepartmentToCompany)
          .AddMethod(__Method_deleteDepartmentsFromCompany, serviceImpl.deleteDepartmentsFromCompany)
          .AddMethod(__Method_hireEmployee, serviceImpl.hireEmployee)
          .AddMethod(__Method_addEmployeeToHumanResource, serviceImpl.addEmployeeToHumanResource)
          .AddMethod(__Method_addEmployeeToDepartment, serviceImpl.addEmployeeToDepartment)
          .AddMethod(__Method_dismissFromHumanResource, serviceImpl.dismissFromHumanResource)
          .AddMethod(__Method_dismissFromDepartment, serviceImpl.dismissFromDepartment)
          .AddMethod(__Method_dismissEmployee, serviceImpl.dismissEmployee)
          .AddMethod(__Method_startProject, serviceImpl.startProject)
          .AddMethod(__Method_sellProject, serviceImpl.sellProject)
          .AddMethod(__Method_finishProject, serviceImpl.finishProject).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, CompanyServiceBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_createCompany, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Employee_gRPC_service.setNameCompany, global::Employee_gRPC_service.returnCompany>(serviceImpl.createCompany));
      serviceBinder.AddMethod(__Method_getCompany, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Employee_gRPC_service.setCompanyId, global::Employee_gRPC_service.returnCompany>(serviceImpl.getCompany));
      serviceBinder.AddMethod(__Method_getHumanResource, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Employee_gRPC_service.setCompanyId, global::Employee_gRPC_service.allEmployees>(serviceImpl.getHumanResource));
      serviceBinder.AddMethod(__Method_getAllDepartments, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Employee_gRPC_service.setCompanyId, global::Employee_gRPC_service.allDepartments>(serviceImpl.getAllDepartments));
      serviceBinder.AddMethod(__Method_getAllProjectsOfDepartment, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Employee_gRPC_service.setCompanyIdAndDepartmentId, global::Employee_gRPC_service.allProjects>(serviceImpl.getAllProjectsOfDepartment));
      serviceBinder.AddMethod(__Method_getAllEmployeesOfDepartment, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Employee_gRPC_service.setCompanyIdAndDepartmentId, global::Employee_gRPC_service.allEmployees>(serviceImpl.getAllEmployeesOfDepartment));
      serviceBinder.AddMethod(__Method_addDepartmentToCompany, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Employee_gRPC_service.setCompanyIdAndDepartment, global::Employee_gRPC_service.getDepartment>(serviceImpl.addDepartmentToCompany));
      serviceBinder.AddMethod(__Method_deleteDepartmentsFromCompany, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Employee_gRPC_service.setCompanyIdAndDepartmentId, global::Employee_gRPC_service.Status>(serviceImpl.deleteDepartmentsFromCompany));
      serviceBinder.AddMethod(__Method_hireEmployee, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Employee_gRPC_service.setCompanyIdAndPerson, global::Employee_gRPC_service.getEmployee>(serviceImpl.hireEmployee));
      serviceBinder.AddMethod(__Method_addEmployeeToHumanResource, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Employee_gRPC_service.setCompanyIdAndEmployeeId, global::Employee_gRPC_service.allEmployees>(serviceImpl.addEmployeeToHumanResource));
      serviceBinder.AddMethod(__Method_addEmployeeToDepartment, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Employee_gRPC_service.setCompanyIdAndDepartmentIdAndEmployeeId, global::Employee_gRPC_service.getDepartment>(serviceImpl.addEmployeeToDepartment));
      serviceBinder.AddMethod(__Method_dismissFromHumanResource, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Employee_gRPC_service.setCompanyIdAndEmployeeId, global::Employee_gRPC_service.allEmployees>(serviceImpl.dismissFromHumanResource));
      serviceBinder.AddMethod(__Method_dismissFromDepartment, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Employee_gRPC_service.setCompanyIdAndDepartmentIdAndEmployeeId, global::Employee_gRPC_service.getDepartment>(serviceImpl.dismissFromDepartment));
      serviceBinder.AddMethod(__Method_dismissEmployee, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Employee_gRPC_service.setCompanyIdAndEmployeeId, global::Employee_gRPC_service.Status>(serviceImpl.dismissEmployee));
      serviceBinder.AddMethod(__Method_startProject, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Employee_gRPC_service.setCompanyIdAndProjectAndDepartmentIdAndEmployees, global::Employee_gRPC_service.getDepartment>(serviceImpl.startProject));
      serviceBinder.AddMethod(__Method_sellProject, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Employee_gRPC_service.setCompanyIdAndProjectAndDepartmentId, global::Employee_gRPC_service.getDepartment>(serviceImpl.sellProject));
      serviceBinder.AddMethod(__Method_finishProject, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Employee_gRPC_service.setCompanyIdAndProjectAndDepartmentId, global::Employee_gRPC_service.getDepartment>(serviceImpl.finishProject));
    }

  }
  /// <summary>
  /// Service Employee 
  /// </summary>
  public static partial class EmployeeService
  {
    static readonly string __ServiceName = "EmployeeService";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Employee_gRPC_service.setEmployeeId> __Marshaller_setEmployeeId = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Employee_gRPC_service.setEmployeeId.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Employee_gRPC_service.getNameResponse> __Marshaller_getNameResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Employee_gRPC_service.getNameResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Employee_gRPC_service.getBirthDateResponse> __Marshaller_getBirthDateResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Employee_gRPC_service.getBirthDateResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Employee_gRPC_service.getRegistryNumberResponse> __Marshaller_getRegistryNumberResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Employee_gRPC_service.getRegistryNumberResponse.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Employee_gRPC_service.setEmployeeId, global::Employee_gRPC_service.getNameResponse> __Method_getName = new grpc::Method<global::Employee_gRPC_service.setEmployeeId, global::Employee_gRPC_service.getNameResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "getName",
        __Marshaller_setEmployeeId,
        __Marshaller_getNameResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Employee_gRPC_service.setEmployeeId, global::Employee_gRPC_service.getBirthDateResponse> __Method_getBirthDate = new grpc::Method<global::Employee_gRPC_service.setEmployeeId, global::Employee_gRPC_service.getBirthDateResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "getBirthDate",
        __Marshaller_setEmployeeId,
        __Marshaller_getBirthDateResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Employee_gRPC_service.setEmployeeId, global::Employee_gRPC_service.getRegistryNumberResponse> __Method_getRegistryNumber = new grpc::Method<global::Employee_gRPC_service.setEmployeeId, global::Employee_gRPC_service.getRegistryNumberResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "getRegistryNumber",
        __Marshaller_setEmployeeId,
        __Marshaller_getRegistryNumberResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Employee_gRPC_service.CompanyReflection.Descriptor.Services[1]; }
    }

    /// <summary>Base class for server-side implementations of EmployeeService</summary>
    [grpc::BindServiceMethod(typeof(EmployeeService), "BindService")]
    public abstract partial class EmployeeServiceBase
    {
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Employee_gRPC_service.getNameResponse> getName(global::Employee_gRPC_service.setEmployeeId request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Employee_gRPC_service.getBirthDateResponse> getBirthDate(global::Employee_gRPC_service.setEmployeeId request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Employee_gRPC_service.getRegistryNumberResponse> getRegistryNumber(global::Employee_gRPC_service.setEmployeeId request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(EmployeeServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_getName, serviceImpl.getName)
          .AddMethod(__Method_getBirthDate, serviceImpl.getBirthDate)
          .AddMethod(__Method_getRegistryNumber, serviceImpl.getRegistryNumber).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, EmployeeServiceBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_getName, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Employee_gRPC_service.setEmployeeId, global::Employee_gRPC_service.getNameResponse>(serviceImpl.getName));
      serviceBinder.AddMethod(__Method_getBirthDate, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Employee_gRPC_service.setEmployeeId, global::Employee_gRPC_service.getBirthDateResponse>(serviceImpl.getBirthDate));
      serviceBinder.AddMethod(__Method_getRegistryNumber, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Employee_gRPC_service.setEmployeeId, global::Employee_gRPC_service.getRegistryNumberResponse>(serviceImpl.getRegistryNumber));
    }

  }
}
#endregion
